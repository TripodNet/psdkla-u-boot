/*
 * (C) Copyright 2016
 * Texas Instruments Incorporated.
 * Venkateswara Rao Mandela <venkat.mandela@ti.com>
 *
 * Documentation for Early Boot functionality
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */


Using Early Boot on TI DRA7xx platforms
=======================================

"Early boot" as defined in the scope of this document is booting slave cores in
a heteregeneous multiprocessor system before the main core running Linux is
booted. In case of a DRA7xx SOC, this could be booting the M4 core or the DSP
core before the A15 core has booted Linux. This feature is typically used to
handle functionality that needs to be available immediately after boot. In the
automotive domain, these functionalities could be responding to CAN messages,
bringing up the rear view camera, playing out a chime as soon as the key is
inserted. The "Early Boot" functionality is typically used along side a "late
attach" feature in the Linux kernel. By doing a "late attach", the Linux kernel
starts communicating and controlling an already running remotecore(M4/DSP)
instead of a resetting, reloading and restarting the core.

Current Support Status
======================

This version of U-Boot supports loading IPU1/IPU2/DSP1/DSP2 in the DRA7x SOC
from the bootloader. The selected remotecores are booted from a ELF images in
the FAT partition of the MMC/SD device or a specified eMMC partition. The MMU
of the remotecore is setup in a manner expected by the Linux kernel.

Configuration Options
======================

The below options should be set through menuconfig or configs/dra7xx_evm_defconfig.

CONFIG_LATE_ATTACH=y

	Setting this option enables the early boot functionality in U-Boot.
	This option automatically enables the ELF loader support and includes
	the common/elf_remoteproc.c required for remoteproc support in the
	build.

CONFIG_LATE_ATTACH_GPT_PART=y

        Enable this flag when booting Android. This flag enables MLO to look in
        named EFI partitions for the remotecore binaries.

Load addresses
==============
==============

MAX_REMOTECORE_BIN_SIZE

        This macro is defined in ti_omap5_common.h and specifies the maximum size
        of the ELF binary that can be loaded via early boot. This is currently
        configured to 8 MB which should be a reasonable size of most of the symbol
        stripped ELF binaries.


IPU1_LOAD_ADDR
IPU2_LOAD_ADDR
DSP1_LOAD_ADDR
DSP2_LOAD_ADDR

        The below four macros specify the addresses where MLO/SPL
        loads the remotecore ELF binaries temporarily for
        processing. These addresses should be chosen such that they do
        not trample on each other or on the u-boot code or on the
        final DDR addresses used by the remotecores.

        These macros are defined in ti_omap5_common.h. For convenience,
        only IPU1_LOAD_ADDR needs to be defined. The other macros are
        computed based on IPU1_LOAD_ADDR and MAX_REMOTECORE_BIN_SIZE.

Binary storage locations (Linux)
================================
================================

In case of Linux boot, the binaries are read from the FAT parition of
the eMMC or SD card based on the boot media. The binaries should be
stored with the same names as defined by the Linux Kernel.

IPU1 - dra7-ipu1-fw.xem4
IPU2 - dra7-ipu2-fw.xem4
DSP1 - dra7-dsp1-fw.xe66
DSP2 - dra7-dsp2-fw.xe66

Binary storage locations (Android)
==================================
==================================

CONFIG_MMC_IPU1_PART_NAME
CONFIG_MMC_IPU2_PART_NAME
CONFIG_MMC_DSP1_PART_NAME
CONFIG_MMC_DSP2_PART_NAME

        Android uses a GPT partition on eMMC for boot. These macros
        specify the name of the GPT parition from which the
        corresponding ELF binary is read. The binary is expected to
        stored as is without any header. The whole partition is read
        into memory. So the partition size should be smaller than
        MAX_REMOTECORE_BIN_SIZE.

With these options enabled, the remotecores to be booted should be specified in
the array cores_to_boot[] in common/spl/spl.c. Only the cores
specified in this array are booted by the bootloader and in the same order as
specified in the array.

#ifdef CONFIG_LATE_ATTACH
u32 cores_to_boot[] = { IPU2, DSP1, DSP2, IPU1 };
#endif

Test Status
===========

Early boot by U-Boot and Late attach by Linux Kernel has been verified using
IPC sample applications for MessageQ.

Pending Development
===================

The pending features are listed in no specific priority.

1. Currently we only support early booting the remotecores from SPL. Adding
support for early booting from U-Boot is desirable for debug purposes.

2. Linux kernel requires the device tree nodes part of the remotecore being
early booted to be marked with specific attributes. Currently this done outside
the boot loader by compiling a new DTB file. Add a feature to U-Boot to set the
required attributes on the device tree  nodes before booting the kernel.

3. Add support for loading the remotecore binaries from QSPI.
